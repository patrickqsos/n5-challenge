services:
  n5-api:
    image: n5-api
    container_name: n5-api
    build:
      context: .
      dockerfile: N5Challenge/Dockerfile
    ports:
      - 8080:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
    depends_on:
      - db
      - kafka
      - elasticsearch
      - kibana

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=n5ch4ll3ng3!
    ports:
      - 1433:1433
    restart: unless-stopped
  
  kafka:
    image: confluentinc/cp-kafka:7.9.1
    restart: unless-stopped
    container_name: kafka
    ports:
      - 9091:9091
      - 9092:9092
      - 9093:9093
    volumes:
      - ./kafka-storage/kafka:/tmp/kraft-combined-logs
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NODE_ID: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: '1ofeTjqtTaiTp-EB1-k-UQ'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: 'controller,broker'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: 'CONTROLLER://0.0.0.0:9093,INTERNAL://0.0.0.0:9092,INTERNALUI://0.0.0.0:9091'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,INTERNALUI:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://localhost:9092,INTERNALUI://kafka:9091'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'

  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:v1.2.0
    restart: unless-stopped
    hostname: kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    environment:
      AUTH_TYPE: 'LOGIN_FORM'
      DYNAMIC_CONFIG_ENABLED: 'true'
      SPRING_SECURITY_USER_NAME: 'kafka'
      SPRING_SECURITY_USER_PASSWORD: 'kafka'
      KAFKA_CLUSTERS_0_NAME: 'n5'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:9091'
    depends_on:
      - kafka
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch
    restart: always
    environment:
      - node.name=elasticsearch
      - ELASTIC_PASSWORD=elastic
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch-storage:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana-init:
    image: alpine:3.19
    container_name: kibana-init
    working_dir: /data
    volumes:
      - .:/data
    entrypoint: sh -c "apk add --no-cache bash curl sed; chmod +x elasticsearch-init.sh; bash elasticsearch-init.sh"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: kibana
    restart: always
    ports:
      - 5601:5601
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    